[{"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\index.tsx":"1","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\reportWebVitals.ts":"2","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\App\\App.tsx":"3","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Login\\Login.tsx":"4","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\contexts\\AuthContext.tsx":"5","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Companies\\Companies.tsx":"6","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Company\\Company.tsx":"7","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Nav\\Nav.tsx":"8","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Users\\Users.tsx":"9","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\User\\User.tsx":"10","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\JobPosts\\JobPosts.tsx":"11","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\JobPost\\JobPost.tsx":"12","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Logout\\Logout.tsx":"13","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Register\\Register.tsx":"14"},{"size":611,"mtime":1607481936505,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":1920,"mtime":1607492343007,"results":"18","hashOfConfig":"16"},{"size":1192,"mtime":1607488007879,"results":"19","hashOfConfig":"16"},{"size":3169,"mtime":1607528414306,"results":"20","hashOfConfig":"16"},{"size":1409,"mtime":1607491046180,"results":"21","hashOfConfig":"16"},{"size":1290,"mtime":1607491051601,"results":"22","hashOfConfig":"16"},{"size":893,"mtime":1607492207813,"results":"23","hashOfConfig":"16"},{"size":1351,"mtime":1607489192149,"results":"24","hashOfConfig":"16"},{"size":1287,"mtime":1607489487776,"results":"25","hashOfConfig":"16"},{"size":1399,"mtime":1607490822900,"results":"26","hashOfConfig":"16"},{"size":1330,"mtime":1607490740297,"results":"27","hashOfConfig":"16"},{"size":488,"mtime":1607492321140,"results":"28","hashOfConfig":"16"},{"size":1399,"mtime":1607492354189,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ehq9sx",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\index.tsx",[],["60","61"],"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\reportWebVitals.ts",[],"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\App\\App.tsx",["62"],"import React, { useContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport AuthContext from '../../contexts/AuthContext';\nimport Companies from '../Companies/Companies';\nimport Company from '../Company/Company';\nimport JobPost from '../JobPost/JobPost';\nimport JobPosts from '../JobPosts/JobPosts';\nimport Login from '../Login/Login';\nimport Logout from '../Logout/Logout';\nimport Nav from '../Nav/Nav';\nimport Register from '../Register/Register';\nimport User from '../User/User';\nimport Users from '../Users/Users';\nimport './App.css';\n\nconst ProtectedRoute = ({\n  path,\n  component,\n  exact = false,\n}: {\n  path: string;\n  component: any;\n  exact?: boolean;\n}) => {\n  return <Route path={path} component={component} exact={exact} />;\n};\n\nconst App = () => {\n  const { isLoggedIn } = useContext(AuthContext);\n\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <Nav />\n        <div className=\"app-content\">\n          <Switch>\n            <Route path=\"/login\" component={Login} exact />\n            <Route path=\"/register\" component={Register} exact />\n            <Route path=\"/logout\" component={Logout} exact />\n            <Route path=\"/companies\" component={Companies} exact />\n            <Route path=\"/companies/:companyId\" component={Company} exact />\n            <Route path=\"/users\" component={Users} exact />\n            <Route path=\"/users/:userId\" component={User} exact />\n            <Route path=\"/jobposts\" component={JobPosts} exact />\n            <Route path=\"/jobposts/:jobPostId\" component={JobPost} exact />\n            <Route path=\"/\" exact>\n              {isLoggedIn() ? (\n                <Redirect to=\"/companies\" />\n              ) : (\n                <Redirect to=\"/login\" />\n              )}\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Login\\Login.tsx",[],"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\contexts\\AuthContext.tsx",[],"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Companies\\Companies.tsx",[],"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Company\\Company.tsx",[],"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Nav\\Nav.tsx",[],"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Users\\Users.tsx",[],"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\User\\User.tsx",[],"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\JobPosts\\JobPosts.tsx",[],"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\JobPost\\JobPost.tsx",[],"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Logout\\Logout.tsx",[],"C:\\Dev\\School\\cpsc-471-project\\cpsc-471-project\\ClientApp\\src\\components\\Register\\Register.tsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":21,"column":7,"nodeType":"69","messageId":"70","endLine":21,"endColumn":21},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'ProtectedRoute' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]